{
  "changes": [
    {
      "timestamp": "2025-10-07T07:00:00-05:00",
      "file": "public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Practice Overlays Now Work with Practice Passages - Implemented support for practice overlays (such as fingering displays and note names) when rendering practice passages. Previously, overlays only worked with scale displays. Updated practice passage rendering logic to apply the same overlay functionality available for scales, providing consistent visual aids across both scale and practice passage modes."
    },
    {
      "timestamp": "2025-10-07T06:00:00-05:00",
      "file": "public/scripts/render-scale.js, public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Out-of-Range Notes Now Display in Red - Implemented visual feedback to highlight notes that fall outside an instrument's standard playing range. Notes beyond the instrument's standardRange (defined in instruments.json) are now rendered in red color using VexFlow's setStyle() method. Added range checking logic to both scale rendering (render-scale.js) and practice passage rendering (show-scales.js convertToVexNote function). Range validation uses MIDI number comparison for accurate pitch-based checking across octaves."
    },
    {
      "timestamp": "2025-10-07T05:00:00-05:00",
      "file": "public/scripts/render-scale.js",
      "change": "FEATURE COMPLETED: CMT Now Shows Above Staff Notes - Fixed Compact Music Token (CMT) display functionality to properly render CMT notation above musical staff notes. Added 'cmt' display mode handling in render-scale.js that converts notes to CMT format (e.g., 'C/4:q' for C4 quarter note). CMT tokens now appear as annotations above staff notes when CMT display option is selected, providing the intended tokenized music notation display."
    },
    {
      "timestamp": "2025-10-07T04:00:00-05:00",
      "file": "public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Bar Lines Now Render for Practice Passages - Fixed bar lines not rendering on staff with Practice Passages. Implemented manual bar line drawing using canvas context (similar to scale rendering) instead of relying on VexFlow BarNote objects. Bar lines now properly appear between measures when 'Show Bar Lines' checkbox is enabled. Updated renderPracticePassage(), renderPassageStave(), and renderStaveNotesFixed() functions to support bar line rendering based on measure boundaries from practice passage JSON data."
    },
    {
      "timestamp": "2025-10-07T03:30:00-05:00",
      "file": "public/show-scales.html",
      "change": "FEATURE COMPLETED: Clear Staff When Practice Type Selected but No Passage Chosen - Fixed issue where staff showed previous scale content instead of being blank when switching to practice passage mode before selecting a specific passage. Added renderCurrentScale() call to practice type change event listener to properly clear and re-render staff content based on current mode and selections."
    },
    {
      "timestamp": "2025-10-07T03:00:00-05:00",
      "file": "public/data/version.json, public/data/change-log.json",
      "change": "VERSION BUMP: Rev 0.14 - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-07T02:00:00-05:00",
      "file": "public/data/feature-pipeline.json, public/data/change-log.json",
      "change": "SITE MIGRATION: Site migrated to MusicTutor.Studio - Successfully completed migration to MusicTutor.Studio domain. All features, data, and user preferences have been preserved. Updated feature pipeline to mark migration as completed."
    },
    {
      "timestamp": "2025-10-07T01:00:00-05:00",
      "file": "public/scripts/render-scale.js, public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Bar lines work now for scales - Implemented proper bar line rendering that works correctly for all note durations (eighth, quarter, half, and whole notes). Bar lines now appear at correct measure boundaries based on note duration in 4/4 time signature. Updated renderScale() function to calculate notes per measure dynamically and draw vertical bar lines using VexFlow canvas context."
    },
    {
      "timestamp": "2025-10-07T00:45:00-05:00",
      "file": "public/scripts/render-scale.js, public/scripts/show-scales.js, public/show-scales.html",
      "change": "FEATURE COMPLETED: Scale duration can now be selected - Implemented note duration selection functionality allowing users to choose between eighth, quarter, half, and whole notes for scale rendering. Added noteDuration parameter to renderScale() function with proper VexFlow duration mapping. Updated Voice timing calculations to handle different note values correctly. Note duration preferences are saved via cookies and restored on page load."
    },
    {
      "timestamp": "2025-10-07T00:30:00-05:00",
      "file": "public/show-scales.html",
      "change": "UI IMPROVEMENT: Staff Display Options Labels - Updated section heading from 'Staff Elements' to 'Staff Display Options' for clearer terminology. Simplified checkbox labels by removing 'Show' prefix from 'Key Signature', 'Accidentals', 'Bar Lines', and 'Time Signature' options. This creates a cleaner, more concise interface while maintaining the same functionality and tooltip explanations."
    },
    {
      "timestamp": "2025-10-07T00:15:00-05:00",
      "file": "public/scripts/render-scale.js, public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Show Time Signature - Implemented time signature display for scale notation. Added checkbox functionality that shows/hides Common (4/4) time signature at the beginning of staves. Updated renderScale() function to check Show Time Signature checkbox state and add time signature to both primary and additional staves. Modified event listener to trigger real-time re-rendering when checkbox state changes. Time signature now displays consistently across all scale types and multi-stave layouts, providing traditional notation appearance when combined with Show Bar Lines option."
    },
    {
      "timestamp": "2025-10-06T23:45:00-04:00",
      "file": "public/data/feature-pipeline.json",
      "change": "FEATURE PIPELINE: Added Two New Active Wishlist Items - Added 'Add Bar Lines to Practice Passage Notation' to enhance VexFlow rendering with proper measure separation based on JSON measure numbers. Added 'Implement CMT Display Option for Practice Passages' to provide Compact Music Token display alongside existing options, leveraging the existing cmtConverter.js. Both features marked as Active status for future implementation."
    },
    {
      "timestamp": "2025-10-06T23:30:00-04:00",
      "file": "public/scripts/show-scales.js",
      "change": "BUG FIX: First Staff Note Clipping - Fixed issue where the last note on the first staff was being clipped due to insufficient space for time signature, key signature, and clef. Added 80px extra width to first stave and adjusted note formatting width calculation to account for signatures. Modified renderPassageStave() to handle first stave differently with expanded width, and updated renderStaveNotesFixed() to use reduced formatting width (120px vs 20px) on first stave. This ensures all notes are fully visible even with complex key signatures like D major."
    },
    {
      "timestamp": "2025-10-06T23:15:00-04:00",
      "file": "public/scripts/show-scales.js",
      "change": "UI IMPROVEMENT: Practice Passage Staff Layout - Increased staff width from 300px to 500px and reduced measures per staff from 4 to 3 for better note spacing and readability. This provides more generous horizontal space for complex rhythms, dotted notes, and accidentals in practice passages like King of the Road and Danny Boy. The wider staves eliminate crowding and improve visual clarity of musical notation."
    },
    {
      "timestamp": "2025-10-06T23:00:00-04:00",
      "file": "public/scripts/show-scales.js",
      "change": "BUG FIX: Practice Passage Note Duration Display - Continued refinement of VexFlow note rendering to ensure proper duration display. Enhanced convertToVexNote() with detailed logging of duration conversion process. Modified renderPassageStave() to use simplified voice creation without barlines for better timing compatibility. Added renderStaveNotesFixed() with ultra-simple fallback rendering that manually positions notes when VexFlow timing fails. This addresses issues where dotted half notes and other non-quarter durations were not displaying correctly in VexFlow 3.0.9."
    },
    {
      "timestamp": "2025-10-06T22:30:00-04:00",
      "file": "public/scripts/show-scales.js",
      "change": "BUG FIX: Practice Passage Rhythm Rendering - Enhanced VexFlow voice timing to properly handle complex rhythms including dotted half notes. Modified renderStaveNotes() to use 16 beats per measure (sixteenth note base) for better accommodation of dotted notes and mixed rhythms. Added fallback timing for compatibility. Enhanced diagnostic logging in convertToVexNote() for better debugging of note conversion. This fixes rendering issues with pieces like Danny Boy measure 2 (F#4:h. E4:q) where dotted half notes were not displaying correctly."
    },
    {
      "timestamp": "2025-10-06T22:00:00-04:00",
      "file": "public/scripts/show-scales.js",
      "change": "FEATURE COMPLETED: Practice Passage Staff Notation - Implemented comprehensive VexFlow-based rendering for practice passages. Added renderPracticePassage() function with multi-staff support, automatic layout calculation (4 measures per staff), proper clef/key/time signature handling, and robust note format conversion. Practice passages now display with proper musical notation using multiple staves as needed, supporting complex pieces like Danny Boy and Twinkle Twinkle. Modified renderCurrentScale() to detect practice passage mode and route to appropriate rendering function. Enhanced error handling and diagnostic logging throughout."
    },
    {
      "timestamp": "2025-10-07T00:00:00-05:00",
      "file": "public/data/version.json",
      "change": "VERSION BUMP: Rev 0.13R - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-06T21:00:00-04:00",
      "file": "public/data/version.json",
      "change": "VERSION BUMP: Rev 0.13Q - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-06T20:00:00-04:00",
      "file": "public/data/version.json",
      "change": "Rolled back to prior version."
    },
    {
      "timestamp": "2025-10-06T19:30:00-04:00",
      "file": "public/scripts/show-scales.js, public/show-scales.html",
      "change": "BUG FIX: Fixed Starting Octave Display - Resolved issue where octave numbers showed as dashes instead of actual values. Fixed function name conflict between HTML and JavaScript updateOctaveLabel() functions by renaming HTML function to updateOctaveLabelText(). Changed startingOctave initialization from null to 4. This restores proper octave number display in both 'Starting Octave' and 'Octave Transposition' modes."
    },
    {
      "timestamp": "2025-10-06T18:00:00-04:00",
      "file": "public/data/version.json",
      "change": "Uprev to 0.13J - Version bump and maintenance release."
    },
    {
      "timestamp": "2025-10-06T17:00:00-04:00",
      "file": "show-scales.html, show-scales.js",
      "change": "UI ENHANCEMENT: Complete Textual Note Output Section Hidden by Default - The entire 'Textual Note Output' section (including '🎵 Current Scale:' label and descriptive text) is now completely hidden unless diagnostic mode is enabled. Added ID 'textual-note-output' to the section with 'display: none' by default. Updated toggleDiagnosticMode() to show/hide the entire section. This provides a completely clean interface in normal operation with no textual scale output visible until diagnostic mode is explicitly enabled."
    },
    {
      "timestamp": "2025-10-06T16:30:00-04:00",
      "file": "show-scales.js",
      "change": "FEATURE ENHANCEMENT: Diagnostic-Only Scale Display - Modified scale notes display to only show 🎵 Current Scale (e.g., 'A4 | B4 | C♯5 | D5 | E5 | F♯5 | G♯5 | A5') when diagnostic mode is enabled. In normal operation, the scale-notes-display area remains empty, providing a cleaner interface. The detailed diagnostic information including parameters, raw notes, and technical details appears below the formatted scale display when diagnostic mode is active. Ensures Enable Diagnostic Mode defaults to unchecked state."
    },
    {
      "timestamp": "2025-10-06T16:00:00-04:00",
      "file": "show-scales.js, render-scale.js",
      "change": "FEATURE COMPLETED: Enable Diagnostic Mode - Implemented comprehensive diagnostic functionality that was previously commented out. Added diagnostic mode toggle with persistent state, enhanced logging system with diagnosticLog() function, detailed scale generation diagnostics, fingering lookup tracing, MIDI conversion monitoring, and enhanced scale notes display with diagnostic overlays. When enabled, reveals note mapping details, MATCH overlays, trace logs, and comprehensive debugging information in both console and UI. State persists between sessions via cookies."
    },
    {
      "timestamp": "2025-10-06T15:30:00-04:00",
      "file": "version.json",
      "change": "VERSION BUMP: Rev 0.13H - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-06T15:00:00-04:00",
      "file": "version.json",
      "change": "VERSION BUMP: Rev 0.13G - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-06T14:00:00-04:00",
      "file": "show-scales.html",
      "change": "FEATURE COMPLETED: Rev 0.13F - Collapsible Fieldset Layout for show-scales.html: Completely redesigned UI with 8 collapsible fieldsets (Title/Instrument, Music Display, Practice Type, Select Practice Passage, Display Settings, Octave Controls, Scale Configuration, Diagnostics). Added smooth CSS animations, persistent collapse states via localStorage, keyboard accessibility (Enter/Space), and mode-based dynamic labels. Octave Controls now shows 'Starting Octave' in Scales mode and 'Octave Transposition' in Practice Passage mode. This provides a cleaner, more organized interface allowing users to focus on relevant sections while maintaining full functionality."
    },
    {
      "timestamp": "2025-10-06T12:00:00-04:00",
      "file": "version.json",
      "change": "VERSION BUMP: Rev 0.13F - Version increment and maintenance release."
    },
    {
      "timestamp": "2025-10-05T20:00:00-04:00",
      "file": "show-scales.html, show-scales.js, render-scale.js",
      "change": "FEATURE COMPLETED: Rev 0.13E - Enhanced Accidental Display Options for show-scales.html: Added key signatures to all scales. Updated VexFlow rendering to support key signatures for major scales and conditional accidental display. This allows users to see scales with traditional key signatures, individual accidentals, or both combined for enhanced music theory learning."
    },
    {
      "timestamp": "2025-10-05T19:00:00-04:00",
      "file": "show-scales.json",
      "change": "FEATURE COMPLETED: Rev 0.13A - Key Signature Info in Starting Note Dropdown: Added number of sharps and flats to dropdown for each starting note (key) to provide key signature information at a glance. Enhanced all 14 major scale entries with descriptive labels showing key signature details (e.g., 'C (no accidentals)', 'G (1 sharp)', 'F (1 flat)', 'A♭ (4 flats)'). Also added structured sharps/flats data fields for future programmatic use."
    },
    {
      "timestamp": "2025-10-05T18:00:00-04:00",
      "file": "show-scales.html",
      "change": "STATUS UPDATE: Rev 0.12T - All known bugs for major scales in show-scales.html have been resolved. All 14 major scales (A, B♭, B, C, D♭, C♯, D, E♭, E, F, F♯, G♭, G, A♭) now display correct enharmonic notation and scale degrees."
    },
    {
      "timestamp": "2025-10-05T17:30:00-04:00",
      "file": "show-scales.js",
      "change": "MAJOR FIX: Rev 0.12T - Fixed flat major scales being incorrectly rendered as sharp equivalents. B♭ Major now displays correctly (not A♯ Major), D♭ Major displays correctly (not C♯ Major), E♭ Major displays correctly (not D♯ Major), G♭ Major displays correctly (not F♯ Major), A♭ Major displays correctly (not G♯ Major). Root cause: normalizeNoteName() was converting flats to sharps before scale generation."
    },
    {
      "timestamp": "2025-10-05T17:00:00-04:00",
      "file": "show-scales.js",
      "change": "FIXED: Rev 0.12T - Resolved enharmonic notation bugs in major scales. C♯ Major now correctly displays C♯, D♯, E♯, F♯, G♯, A♯, B♯ (not converted to D♭ Major). D♭ Major displays D♭, E♭, F, G♭, A♭, B♭, C. G♭ Major correctly shows C♭ instead of B. Fixed accidental family conversion logic to preserve theoretical scale patterns."
    },
    {
      "timestamp": "2025-10-05T16:00:00-04:00",
      "file": "show-scales.json",
      "change": "Rev 0.12S - Added enharmonic warnings to newly added major scales (D♭/C♯ Major and F♯/G♭ Major)"
    },
    {
      "timestamp": "2025-10-05T16:01:00-04:00",
      "file": "show-scales.html",
      "change": "FIXED: Rev 0.12T - D♭ Major scale no longer uses E♯ for F and B♯ for C"
    },
    {
      "timestamp": "2025-10-05T16:02:00-04:00",
      "file": "show-scales.html",
      "change": "FIXED: Rev 0.12T - C♯ Major scale now correctly renders as C♯ Major with proper sharp notation"
    },
    {
      "timestamp": "2025-10-05T16:03:00-04:00",
      "file": "show-scales.html",
      "change": "FIXED: Rev 0.12T - G♭ Major scale now correctly uses C♭ for B and F for E (proper flat notation)"
    },
    {
      "timestamp": "2025-10-05T12:00:00-04:00",
      "file": "show-scales.js",
      "change": "FIXED: Rev 0.12T - D♭ / C♯ major scale enharmonic notation corrected. D♭ Major uses proper flats, C♯ Major uses proper sharps including E♯ and B♯"
    },
    {
      "timestamp": "2025-09-20T08:15:00-04:00",
      "file": "play-scales.html",
      "change": "Added toggle behavior to Play Scale button with visual feedback and stop functionality"
    },
    {
      "timestamp": "2025-09-20T08:20:00-04:00",
      "file": "about.html",
      "change": "Created About page with disclaimer, contributor credits, documentation link, and Home button"
    },
    {
      "timestamp": "2025-09-20T08:25:00-04:00",
      "file": "about.html",
      "change": "Added version number 0.3 and timestamp display"
    },
    {
      "timestamp": "2025-09-20T08:27:00-04:00",
      "file": "index.html",
      "change": "Added version number 0.3 to header opposite timestamp"
    },
    {
      "timestamp": "2025-09-20T08:29:00-04:00",
      "file": "index.html",
      "change": "Replaced trumpet emoji with euphonium image from assets directory"
    },
    {
      "timestamp": "2025-09-20T08:31:00-04:00",
      "file": "index.html",
      "change": "Updated euphonium image filename to double-bell-euphonium.png"
    },
    {
      "timestamp": "2025-09-20T08:33:00-04:00",
      "file": "index.html",
      "change": "Added lower-left corner link to euphonium-tutor.netlify.app"
    },
    {
      "timestamp": "2025-09-20T08:35:00-04:00",
      "file": "about.html",
      "change": "Updated layout and styling to match index.html using Tailwind CSS"
    },
    {
      "timestamp": "2025-09-20T08:37:00-04:00",
      "file": "about.html",
      "change": "Created and populated change-log.json with recorded changes"
    },
    {
      "timestamp": "2025-09-20T08:40:00-04:00",
      "file": "about.html",
      "change": "Added dynamic rendering of change-log.json as collapsible section"
    },
    {
      "timestamp": "2025-10-01T10:45:00-04:00",
      "file": "data/instruments.json",
      "change": "Implemented SPN no-slash format (e.g., C4). Normalized instrument data to no-slash tokens and converted flats to enharmonic sharps for internal consistency. Updated client SPN parser to accept both formats for backward compatibility."
    },
    {
      "timestamp": "2025-10-01T08:11:57-04:00",
      "file": "public/data/version.json",
      "change": "Uprev to 0.12D - Uprev to 0.12D (canonical SPN no-slash release)"
    },
    {
      "timestamp": "2025-10-01T08:17:02-04:00",
      "file": "public/data/version.json",
      "change": "Uprev to 0.12D - Uprev to 0.12D (canonical SPN no-slash release)"
    }
  ]
}
